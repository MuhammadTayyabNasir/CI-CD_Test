# A friendly name for our workflow, which will be displayed in the Actions tab on GitHub.
name: Flutter CI/CD Pipeline

# This section defines the triggers for the workflow.
on:
  # Run the workflow on pushes to these specific branches.
  push:
    branches:
      - Development
      - Staging
      - Production
  # Also run on pull requests that target the 'Development' branch.
  pull_request:
    branches:
      - Development

# A workflow is made up of one or more jobs that can run sequentially or in parallel.
jobs:
  # ----------------------------------------------------
  # JOB 1: VALIDATE THE CODE (CI - Continuous Integration)
  # ----------------------------------------------------
  validate:
    name: Validate & Test Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      - name: Install dependencies
        run: flutter pub get
      - name: Run static analysis
        run: flutter analyze
      - name: Run tests
        run: flutter test
      - name: Show The Secret Build ID
        run: echo "The build ID is ${{ secrets.SUPER_SECRET_BUILD_ID }}"

  # -----------------------------------------------------------
  # JOB 2: DEPLOY TO STAGING (CD - Continuous Deployment)
  # -----------------------------------------------------------
  deploy_staging:
    name: Build & Deploy to Staging (Web)
    needs: validate
    if: github.ref == 'refs/heads/Staging' && github.event_name == 'push'

    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
      
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4
      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      - name: Install dependencies
        run: flutter pub get
      - name: Build Flutter for Web
        run: flutter build web --release
      - name: Upload web build artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: build/web
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      - name: Post deployment link as comment
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: 'ðŸŽ‰ Staging deployment successful! View here: ${{ steps.deployment.outputs.page_url }}'
            });

  # ---------------------------------------------------------------
  # JOB 3: BUILD FOR PRODUCTION (CD - Continuous Deployment)
  # ---------------------------------------------------------------
  build_production:
    name: Build Production Release
    needs: validate
    if: github.ref == 'refs/heads/Production' && github.event_name == 'push'
    runs-on: ubuntu-latest

    # THIS PERMISSIONS BLOCK IS THE FIX FOR THE 401 ERROR
    permissions:
      contents: write

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      - name: Install dependencies
        run: flutter pub get
      - name: Build Android App Bundle for release
        run: flutter build appbundle --release
      - name: Create a GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/bundle/release/app-release.aab"
          token: ${{ secrets.SUPER_SECRET_BUILD_ID }}
          tag: "v${{ github.run_number }}"
          generateReleaseNotes: true